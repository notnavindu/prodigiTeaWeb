{"ast":null,"code":"var _jsxFileName = \"D:\\\\prodigi\\\\THRETA SITE\\\\web\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Home from './components/Home/Home';\nimport News2 from './components/News/News';\nimport Community from './components/Community/Community';\nimport Gameinfo from './components/Gameinfo/Gameinfo';\nimport Gallery from './components/Gallery/Gallery';\nimport Notfound from './components/Notfound/Notfound';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoadingScreen from 'react-loading-screen';\n\nclass App extends Component {\n  // ------------------------------------\n  constructor(props) {\n    super(props);\n    this.loadstate = true;\n    this.state = {\n      sideDrawerOpen: false\n    };\n\n    this.drawerToggleClickHandler = () => {\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        };\n      });\n    };\n\n    this.backdropClickHandler = () => {\n      this.setState({\n        sideDrawerOpen: false\n      });\n    };\n\n    this.state = {\n      apiResponse: \"\",\n      loadr: true\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  } // ------------------------------------\n\n\n  componentDidMount() {\n    this.wait(2000);\n    this.setState({\n      loadr: false\n    });\n  }\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = React.createElement(Backdrop, {\n        click: this.backdropClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(LoadingScreen, {\n      loading: this.state.loadr,\n      bgColor: \"#f1f1f1\",\n      spinnerColor: \"#9ee5f8\",\n      textColor: \"#676767\",\n      logoSrc: \"/logo.png\",\n      text: \"Here an introduction sentence (Optional)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      drawerClickHandler: this.drawerToggleClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      show: this.state.sideDrawerOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), backdrop, React.createElement(\"main\", {\n      style: {\n        marginTop: '64px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(LoadingScreen, {\n      loading: this.state.loadr,\n      bgColor: \"#f1f1f1\",\n      spinnerColor: \"#9ee5f8\",\n      textColor: \"#676767\",\n      logoSrc: \"/logo.png\",\n      text: \"Here an introduction sentence (Optional)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/News\",\n      component: News2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Community\",\n      component: Community,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Gallery\",\n      component: Gallery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Gameinfo\",\n      component: Gameinfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: Notfound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/prodigi/THRETA SITE/web/src/App.js"],"names":["React","Component","Toolbar","SideDrawer","Backdrop","Home","News2","Community","Gameinfo","Gallery","Notfound","BrowserRouter","Router","Route","Switch","LoadingScreen","App","constructor","props","loadstate","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","apiResponse","loadr","callAPI","fetch","then","res","text","componentWillMount","componentDidMount","wait","render","backdrop","height","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\n\nimport Home from './components/Home/Home';\nimport News2 from './components/News/News';\nimport Community from './components/Community/Community';\nimport Gameinfo from './components/Gameinfo/Gameinfo';\nimport Gallery from './components/Gallery/Gallery';\nimport Notfound from './components/Notfound/Notfound';\n\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nimport LoadingScreen from 'react-loading-screen';\n\n\nclass App extends Component{\n\n\n  // ------------------------------------\n  constructor (props){\n    super(props);\n    this.state={apiResponse:\"\", loadr: true};\n  \n\n  }\n\n  loadstate = true;\n\n  callAPI(){\n    fetch(\"http://localhost:9000/testAPI\")\n      .then(res => res.text ())\n      .then(res => this.setState({apiResponse: res}));\n  }\n\n  componentWillMount(){\n    this.callAPI();\n  }\n  // ------------------------------------\n\n  componentDidMount(){\n    this.wait(2000);\n    this.setState({loadr: false});\n  }\n\n  state ={\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler =() =>{\n    this.setState({sideDrawerOpen: false});\n  }\n\n  render() {\n\n    let backdrop;\n\n    if (this.state.sideDrawerOpen){\n      \n      backdrop = <Backdrop click={this.backdropClickHandler}/>;\n    }\n    return (\n      \n      <div>\n        <LoadingScreen\n            loading={this.state.loadr}\n            bgColor='#f1f1f1'\n            spinnerColor='#9ee5f8'\n            textColor='#676767'\n            logoSrc='/logo.png'\n            text='Here an introduction sentence (Optional)'\n          ></LoadingScreen>\n\n        <div style = {{height: '100%'}} className=\"App\">\n          <Toolbar drawerClickHandler= {this.drawerToggleClickHandler}/>\n          <SideDrawer show={this.state.sideDrawerOpen}/>\n          {backdrop}\n           \n          <main style={{marginTop:'64px'}}>\n            \n            \n          </main>\n\n        </div>\n        <LoadingScreen\n            loading={this.state.loadr}\n            bgColor='#f1f1f1'\n            spinnerColor='#9ee5f8'\n            textColor='#676767'\n            logoSrc='/logo.png'\n            text='Here an introduction sentence (Optional)'\n          >\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              \n              <Route exact path=\"/News\" component={News2}></Route>\n              <Route exact path=\"/Community\" component={Community}></Route>\n              <Route exact path=\"/Gallery\" component={Gallery}></Route>\n              <Route exact path=\"/Gameinfo\" component={Gameinfo}></Route>\n              <Route path=\"/\" component={Notfound}></Route>\n\n            </Switch>\n          </Router>\n      \n        \n          </LoadingScreen>\n      </div>\n      \n    );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}